 
begintemplate NGFCell

public connect2target, subsets, is_art, is_connected
public soma, dend
public all, adend, bdend, cdend, ddend
public xx, yy, zz, position

cellid = -1
random_stream_offset = 0

objref all, basal, apical, dendrites, axons
objref synlist

create soma[1], dend[16]


proc init() {
    
	cellid = $1
	random_stream_offset = $2
	synlist = new List()
	
        subsets()
        topol()
        geom()
        geom_nseg()
        biophys()
	synapses()
}

proc topol() { local i
    
    connect dend[0](0), soma(1)
    for i=0,3 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[5](0), soma(1)
    for i=5,8 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[10](0), soma(0)
    for i=10,11 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[13](0), soma(0)
    for i=13,14 {
	connect dend[i+1](0), dend[i](1)
    }
}
        
        
proc geom() {
    
    soma[0] {
        pt3dclear()
	pt3dadd(0, 0, 0, 10) // distance from (0,0,0) = 0
	pt3dadd(0, 10, 0, 10) // distance from (0,0,0) = 10
	pt3dadd(0, 20, 0, 10) // distance from (0,0,0) = 20
    }
    dend[0] {
        pt3dclear()
	pt3dadd(0, 20, 0, 4) // distance from (0,0,0) = 20
	pt3dadd(19.4709, 66.053, 0, 4) // distance from (0,0,0) = 68.8631
	pt3dadd(38.9418, 112.106, 0, 4) // distance from (0,0,0) = 118.677
    }
    dend[1] {
        pt3dclear()
	pt3dadd(38.9418, 112.106, 0, 3) // distance from (0,0,0) = 118.677
	pt3dadd(58.4128, 158.159, 0, 3) // distance from (0,0,0) = 168.601
	pt3dadd(77.8837, 204.212, 0, 3) // distance from (0,0,0) = 218.56
    }
    dend[2] {
        pt3dclear()
	pt3dadd(77.8837, 204.212, 0, 2) // distance from (0,0,0) = 218.56
	pt3dadd(116.826, 296.318, 0, 2) // distance from (0,0,0) = 318.516
	pt3dadd(155.767, 388.424, 0, 2) // distance from (0,0,0) = 418.494
    }
    dend[3] {
        pt3dclear()
	pt3dadd(155.767, 388.424, 0, 1.5) // distance from (0,0,0) = 418.494
	pt3dadd(175.238, 434.477, 0, 1.5) // distance from (0,0,0) = 468.486
	pt3dadd(194.709, 480.531, 0, 1.5) // distance from (0,0,0) = 518.48
    }
    dend[4] {
        pt3dclear()
	pt3dadd(194.709, 480.531, 0, 1) // distance from (0,0,0) = 518.48
	pt3dadd(214.18, 526.584, 0, 1) // distance from (0,0,0) = 568.475
	pt3dadd(233.651, 572.637, 0, 1) // distance from (0,0,0) = 618.47
    }
    dend[5] {pt3dclear()
	pt3dadd(0, 20, 0, 4) // distance from (0,0,0) = 20
	pt3dadd(-19.4709, 66.053, 0, 4) // distance from (0,0,0) = 68.8631
	pt3dadd(-38.9418, 112.106, 0, 4) // distance from (0,0,0) = 118.677
    }
    dend[6] {pt3dclear()
	pt3dadd(-38.9418, 112.106, 0, 3) // distance from (0,0,0) = 118.677
	pt3dadd(-58.4128, 158.159, 0, 3) // distance from (0,0,0) = 168.601
	pt3dadd(-77.8837, 204.212, 0, 3) // distance from (0,0,0) = 218.56
    }
    dend[7] {pt3dclear()
	pt3dadd(-77.8837, 204.212, 0, 2) // distance from (0,0,0) = 218.56
	pt3dadd(-116.826, 296.318, 0, 2) // distance from (0,0,0) = 318.516
	pt3dadd(-155.767, 388.424, 0, 2) // distance from (0,0,0) = 418.494
    }
    dend[8] {pt3dclear()
	pt3dadd(-155.767, 388.424, 0, 1.5) // distance from (0,0,0) = 418.494
	pt3dadd(-175.238, 434.477, 0, 1.5) // distance from (0,0,0) = 468.486
	pt3dadd(-194.709, 480.531, 0, 1.5) // distance from (0,0,0) = 518.48
    }
    dend[9] {pt3dclear()
	pt3dadd(-194.709, 480.531, 0, 1) // distance from (0,0,0) = 518.48
	pt3dadd(-214.18, 526.584, 0, 1) // distance from (0,0,0) = 568.475
	pt3dadd(-233.651, 572.637, 0, 1) // distance from (0,0,0) = 618.47
    }
    dend[10] {pt3dclear()
	pt3dadd(0, 0, 0, 2) // distance from (0,0,0) = 0
	pt3dadd(-19.4709, -46.0531, 0, 2) // distance from (0,0,0) = 50
	pt3dadd(-38.9418, -92.1061, 0, 2) // distance from (0,0,0) = 100
    }
    dend[11] {pt3dclear()
	pt3dadd(-38.9418, -92.1061, 0, 1.5) // distance from (0,0,0) = 100
	pt3dadd(-58.4128, -138.159, 0, 1.5) // distance from (0,0,0) = 150
	pt3dadd(-77.8837, -184.212, 0, 1.5) // distance from (0,0,0) = 200
    }
    dend[12] {pt3dclear()
	pt3dadd(-77.8837, -184.212, 0, 1) // distance from (0,0,0) = 200
	pt3dadd(-97.3546, -230.265, 0, 1) // distance from (0,0,0) = 250
	pt3dadd(-116.826, -276.318, 0, 1) // distance from (0,0,0) = 300
    }
    dend[13] {pt3dclear()
	pt3dadd(0, 0, 0, 2) // distance from (0,0,0) = 0
	pt3dadd(19.4709, -46.053, 0, 2) // distance from (0,0,0) = 50
	pt3dadd(38.9419, -92.1061, 0, 2) // distance from (0,0,0) = 100
    }
    dend[14] {pt3dclear()
	pt3dadd(38.9419, -92.1061, 0, 1.5) // distance from (0,0,0) = 100
	pt3dadd(58.4128, -138.159, 0, 1.5) // distance from (0,0,0) = 150
	pt3dadd(77.8837, -184.212, 0, 1.5) // distance from (0,0,0) = 200
    }
    dend[15] {pt3dclear()
	pt3dadd(77.8837, -184.212, 0, 1) // distance from (0,0,0) = 200
	pt3dadd(97.3546, -230.265, 0, 1) // distance from (0,0,0) = 250
	pt3dadd(116.826, -276.318, 0, 1) // distance from (0,0,0) = 300
    }
}
        
        
proc subsets() { local i

	all = new SectionList()
	basal = new SectionList()
	apical = new SectionList()
	axons = new SectionList()
	dendrites = new SectionList()

	soma all.append()
        
	for i=0,15 {
	    dend[i] all.append()
	    dend[i] dendrites.append()
	}
        
	for i=0,9 {
	    dend[i] apical.append()
	}
        
	for i=10,15 {
	    dend[i] basal.append()
	}
}


proc geom_nseg() { local freq, d_lambda
    
    freq = 50      // Hz, frequency at which AC length constant will be computed
    d_lambda = 0.1
    
    soma area(0.5)
    forall { nseg = int((L/(d_lambda*lambda_f(freq))+0.9)/2)*2 + 1  }

}


proc biophys() {
    
    // Temperature of simulation
    celsius = 34.0  
    
    // Membrane resistance in ohm*cm2
    RmDend = 5555 //1/0.00018 
    RmSoma = 5555 //1/0.00018 
    
    // Membrane capacitance in uF/cm2
    CmSoma= 1.4
    CmDend = 1.4
    
    // Axial resistance in ohm*cm
    RaDend= 100
    RaSoma= 100	
    
    // Calcium concentrations in mM
    ca_outside = 2
    ca_inside = 5.e-6 // 50.e-6
    catau = 10
    
    // reversal potentials in mV
    ekval = -90	
    enaval = 55
    eHCNval = -30
    ecaval = 8.314*(273.15+celsius)/(2*9.649e4)*log(ca_outside/ca_inside)*1000 // about 170, otherwise set to 130
    
    if (Vrest<ekval) Vrest=ekval // Cell cannot rest lower than K+ reversal potential
    if (Vrest>enaval) Vrest=enaval // Cell cannot rest higher than Na+ reversal potential
    eleakval = Vrest
    
    // max ion channel conductances in mho/cm2
    gNav     = 0.15 // soma: // 0.12 //original 0.030 to .055 ; lm: //0.5  	//original 0.015
    gKdr     = 0.013    // Delayed rectifier potassium
    gKvA 	 = 0.00015 // Proximal A-type potassium
    gHCN     = 0.00002 // HCN (hyperpolarization-activated cyclic nucleotide-gated channel)
    gCavN    = 0.0008 //   T-type calcium
    gCavL    = 0.005 //  L-type calcium
    gKvCaB	 = 0.0000002 // Big potassium channel: voltage and calcium gated 
    gKCaS	 = 0.000002 //  Small potassium channel: calcium gated		
    
    gNasoma=3.7860265 
    gNadend=0.25918894  
    gKvA=5.2203905e-06
    kdrf=0.15514516
    kdrfdend = 0.0021817289
    gleak=8.470825e-05
    gCavL=0.056108352
    gCavN=0.00058169587
    gKvCaB=1.0235317e-06 
    gKCaS=4.5152237e-07  
    myRa = 14 //75
    CM = 1.8 //1.8
    offset1=20
    offset2=20
    offset3=13.5816 
    offset4=13.35371
    slope1=0.68266
    slope2=0.56966
    slope3=1.18592
    slope4=49.4896
    offset5=9
    offset6=9
    slope5=.07
    slope6=.264
    
    forsec all {
	insert iconc_Ca
	catau_iconc_Ca = 10
	caiinf_iconc_Ca = 5.e-6
	insert ch_KvAngf
	gmax_ch_KvAngf = gKvA
	insert ch_CavN  // HAV-N- Ca channel
	gmax_ch_CavN =   gCavN
	insert ch_CavL 
	gmax_ch_CavL=gCavL
	insert ch_KCaS
	gmax_ch_KCaS=gKCaS
	insert ch_KvCaB
	gmax_ch_KvCaB =gKvCaB
	cm=CM
    } 
    
    soma {
	insert ch_Navngf
	gmax_ch_Navngf=gNasoma //0.10*gna_scale
	offset1_ch_Navngf=offset1
	offset2_ch_Navngf=offset2
	offset3_ch_Navngf=offset3
	offset4_ch_Navngf=offset4
	slope1_ch_Navngf=slope1
	slope2_ch_Navngf=slope2
	slope3_ch_Navngf=slope3
	slope4_ch_Navngf=slope4
	ena = 55 
		insert ch_Kdrfastngf
	gmax_ch_Kdrfastngf=kdrf 
	offset5_ch_Kdrfastngf=offset5 
	offset6_ch_Kdrfastngf=offset6 
	slope6_ch_Kdrfastngf=slope6 
	slope5_ch_Kdrfastngf=slope5	
//		insert ch_Kdrslow
//	gmax_ch_Kdrslow=kdrf 
	
	insert ch_leak
	gmax_ch_leak = gleak
    } 
    
    soma { distance() }
    
    forsec dendrite_list {
	for (x,0) {
	    if (distance(x)<100) {
		insert ch_Navngf
		gmax_ch_Navngf=gNadend //0.08*gna_scale
		offset1_ch_Navngf=offset1
		offset2_ch_Navngf=offset2
		offset3_ch_Navngf=offset3
		offset4_ch_Navngf=offset4
		slope1_ch_Navngf=slope1
		slope2_ch_Navngf=slope2
		slope3_ch_Navngf=slope3
		slope4_ch_Navngf=slope4
		ena = 55 
		insert ch_Kdrfastngf
		gmax_ch_Kdrfastngf=kdrfdend //.007
		offset5_ch_Kdrfastngf=offset5 
		offset6_ch_Kdrfastngf=offset6 
		slope6_ch_Kdrfastngf=slope6 
		slope5_ch_Kdrfastngf=slope5	
	    }
	}
    }	
    
    forsec dendrites {
	insert ch_leak
	gmax_ch_leak = gleak
    }
    
    forsec all {Ra=myRa}
    forsec all {
        ek=-90  
        eca=130
	e_ch_leak =-60
	cao_iconc_CaZ=2 
	//cao_ccanl=2 
    }  // make catau slower70e-3 	cao=2 cai=50.e-6 
}


proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
    soma $o2 = new NetCon (&v(1), $o1)
    $o2.threshold = -15
    
}

func is_art()  { return 0 }

proc position(){ local i
    forall {
	for i = 0, n3d()-1 {
	    pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
	}
    }
    x = $1  y = $2  z = $3	
}

endtemplate NGFCell

