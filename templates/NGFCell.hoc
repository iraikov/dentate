begintemplate NGFCell

public connect2target, subsets, is_art, is_connected
public soma, dendrites
public all, adend, bdend, cdend, ddend
public xx, yy, zz, position
public syns, syns_GC, syns_MC, syns_HC, syns_BC, syns_AA, syns_HCC, syns_NGFC
public syn_stim

objref all, alldendrites
objref syns, syns_GC, syns_MC, syns_HC, syns_BC, syns_AA, syns_HCC, syns_NGFC, syns_NGFCB
objref syn_stim

create soma, dendrites[1][1]


proc init() {
    
    ndends=4
    ndendsec=1
    
    create dendrites[ndends][ndendsec]
    
    subsets(ndends,ndendsec)
    topol(ndends,ndendsec)
    geom()
    biophys()

    syns_GC = new List()
    syns_MC = new List()
    syns_HC = new List()
    syns_BC = new List()
    syns_AA = new List()
    syns_HCC = new List()
    syns_NGFC = new List()
    syns_NGFCB = new List()
    syns = new List()
    syns.append(syns_GC)
    syns.append(syns_MC)
    syns.append(syns_HC)
    syns.append(syns_BC)
    syns.append(syns_AA)
    syns.append(syns_HCC)
    syns.append(syns_NGFC)
    syns.append(syns_NGFCB)
    
    soma {
        syn_stim = new ExpSyn(0.5)
        syn_stim.tau = 1
    }

}

proc subsets() { local i, ndends, ndendsec

    objref all, alldendrites

    ndends=$1
    ndendsec=$2
    
    all = new SectionList()
    soma all.append()
    
    for i=0, ndends-1 {
        for j=0, ndendsec-1 {
            dendrites[i][j] all.append()
        }
    }
    
    alldendrites = new SectionList()
    for i=0, ndends-1 {
        for j=0, ndendsec-1 {
            dendrites[i][j] alldendrites.append()
        }
    }
}

proc geom() {
    
    soma {nseg=1 L=20 diam=10} // changed L & diam
    
    dendrites[0][0] {nseg=1 L=100 diam=3}	// ncdend 1 and 2 are apical
    dendrites[1][0] {nseg=1 L=100 diam=3}
    dendrites[2][0] {nseg=1 L=100 diam=3} 	// ncdend 3 and 4 are basal
    dendrites[3][0] {nseg=1 L=100 diam=3}
    
}

proc topol() {
    
    ndends=$1
    ndendsec=$2
    
    connect dendrites[0][0](0), soma(1)
    connect dendrites[1][0](0), soma(1)
    connect dendrites[2][0](0), soma(0)
    connect dendrites[3][0](0), soma(0)
}    


proc biophys() {
    gna=0.05
    gkdr=0.0132
    gka=0.00001
    
    forsec all {
        
	insert ccanl
        catau_ccanl = 10
        caiinf_ccanl = 5.e-6
	insert borgka
        gkabar_borgka=gka
	insert nca  // HAV-N- Ca channel
        gncabar_nca=0.0  
	insert lca
        glcabar_lca=0.0015
	insert gskch
        gskbar_gskch=0.00475
	insert cagk
        gkbar_cagk=0.00001
	cm=1.329
    }
    soma {
	insert ichan2
	insert na3
	gbar_na3=gna
	gnatbar_ichan2=0
	gkfbar_ichan2=gkdr
	gl_ichan2 = 0.0001063
    } 
    
    forsec alldendrites {   
        
	insert ichan2
	insert na3           
        gbar_na3=gna*0.2
        //gkdrbar_kdr=gkdr*0.2
        //gkabar_kap = gka*0.2
	gkabar_borgka=gka*0.2
	gkfbar_ichan2=gkdr*0.2
	gnatbar_ichan2=0
	gl_ichan2 = 0.0001063
    }
    forsec all {Ra=100}
    forsec all {
        ena = 55 
        ekf = -90  
        ek=-90  
        esk=-90 
        elca=130
	el_ichan2 =-63.1	
        cao_ccanl=2 
    }  // make catau slower70e-3 	cao=2 cai=50.e-6 
    
}

func is_art()  { return 0 }

obfunc connect2target() { localobj nc // $o1 target point process, optional $o2 returned NetCon
    soma nc = new NetCon(&v(1), $o1)
    nc.threshold = 10
    if (numarg() == 2) { $o2 = nc } // for backward compatibility
    return nc
}

proc position() { local i
    
    soma for i = 0, n3d()-1 {
        pt3dchange(i, $1-xx+x3d(i), $2-yy+y3d(i), $3-zz+z3d(i), diam3d(i))
    }
    xx = $1  yy = $2  zz = $3
}



endtemplate NGFCell
