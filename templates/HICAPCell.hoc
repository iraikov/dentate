
begintemplate HICAPCell

public connect2target, subsets, is_art, is_connected
public soma, bcdend1, bcdend2, bcdend3, bcdend4
public all, adend, bdend, cdend, ddend
public xx, yy, zz, position

objref synlist
objref all, basal_list, apical_list, dendrite_list, soma_list, axon_list

create soma[1], dend[16]

proc init() {
    synlist = new List()
    subsets()
    topol()
    geom()
    biophys()
    synapses()
}

proc topol() { local i
    
    connect dend[0](0), soma(1)
    for i=0,3 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[5](0), soma(1)
    for i=5,8 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[10](0), soma(0)
    for i=10,11 {
	connect dend[i+1](0), dend[i](1)
    }
    
    connect dend[13](0), soma(0)
    for i=13,14 {
	connect dend[i+1](0), dend[i](1)
    }
}


proc geom() {
    
    soma[0] {pt3dclear()
	pt3dadd(0, 0, 0, 10) // distance from (0,0,0) = 0
	pt3dadd(0, 10, 0, 10) // distance from (0,0,0) = 10
	pt3dadd(0, 20, 0, 10) // distance from (0,0,0) = 20
    }
    dend[0] {pt3dclear()
	pt3dadd(0, 20, 0, 3.5) // distance from (0,0,0) = 20
	pt3dadd(19.4709, 66.053, 0, 3.5) // distance from (0,0,0) = 68.8631
	pt3dadd(38.9418, 112.106, 0, 3.5) // distance from (0,0,0) = 118.677
    }
    dend[1] {pt3dclear()
	pt3dadd(38.9418, 112.106, 0, 2.5) // distance from (0,0,0) = 118.677
	pt3dadd(58.4128, 158.159, 0, 2.5) // distance from (0,0,0) = 168.601
	pt3dadd(77.8837, 204.212, 0, 2.5) // distance from (0,0,0) = 218.56
    }
    dend[2] {pt3dclear()
	pt3dadd(77.8837, 204.212, 0, 1.5) // distance from (0,0,0) = 218.56
	pt3dadd(116.826, 296.318, 0, 1.5) // distance from (0,0,0) = 318.516
	pt3dadd(155.767, 388.424, 0, 1.5) // distance from (0,0,0) = 418.494
    }
    dend[3] {pt3dclear()
	pt3dadd(155.767, 388.424, 0, 1.2) // distance from (0,0,0) = 418.494
	pt3dadd(175.238, 434.477, 0, 1.2) // distance from (0,0,0) = 468.486
	pt3dadd(194.709, 480.531, 0, 1.2) // distance from (0,0,0) = 518.48
    }
    dend[4] {pt3dclear()
	pt3dadd(194.709, 480.531, 0, 1) // distance from (0,0,0) = 518.48
	pt3dadd(214.18, 526.584, 0, 1) // distance from (0,0,0) = 568.475
	pt3dadd(233.651, 572.637, 0, 1) // distance from (0,0,0) = 618.47
    }
    dend[5] {pt3dclear()
	pt3dadd(0, 20, 0, 4) // distance from (0,0,0) = 20
	pt3dadd(-19.4709, 66.053, 0, 3.5) // distance from (0,0,0) = 68.8631
	pt3dadd(-38.9418, 112.106, 0, 3.5) // distance from (0,0,0) = 118.677
    }
    dend[6] {pt3dclear()
	pt3dadd(-38.9418, 112.106, 0, 2.5) // distance from (0,0,0) = 118.677
	pt3dadd(-58.4128, 158.159, 0, 2.5) // distance from (0,0,0) = 168.601
	pt3dadd(-77.8837, 204.212, 0, 2.5) // distance from (0,0,0) = 218.56
    }
    dend[7] {pt3dclear()
	pt3dadd(-77.8837, 204.212, 0, 1.5) // distance from (0,0,0) = 218.56
	pt3dadd(-116.826, 296.318, 0, 1.5) // distance from (0,0,0) = 318.516
	pt3dadd(-155.767, 388.424, 0, 1.5) // distance from (0,0,0) = 418.494
    }
    dend[8] {pt3dclear()
	pt3dadd(-155.767, 388.424, 0, 1.2) // distance from (0,0,0) = 418.494
	pt3dadd(-175.238, 434.477, 0, 1.2) // distance from (0,0,0) = 468.486
	pt3dadd(-194.709, 480.531, 0, 1.2) // distance from (0,0,0) = 518.48
    }
    dend[9] {pt3dclear()
	pt3dadd(-194.709, 480.531, 0, 1) // distance from (0,0,0) = 518.48
	pt3dadd(-214.18, 526.584, 0, 1) // distance from (0,0,0) = 568.475
	pt3dadd(-233.651, 572.637, 0, 1) // distance from (0,0,0) = 618.47
    }
    dend[10] {pt3dclear()
	pt3dadd(0, 0, 0, 2) // distance from (0,0,0) = 0
	pt3dadd(-19.4709, -46.0531, 0, 1.5) // distance from (0,0,0) = 50
	pt3dadd(-38.9418, -92.1061, 0, 1.5) // distance from (0,0,0) = 100
    }
    dend[11] {pt3dclear()
	pt3dadd(-38.9418, -92.1061, 0, 1.2) // distance from (0,0,0) = 100
	pt3dadd(-58.4128, -138.159, 0, 1.2) // distance from (0,0,0) = 150
	pt3dadd(-77.8837, -184.212, 0, 1.2) // distance from (0,0,0) = 200
    }
    dend[12] {pt3dclear()
	pt3dadd(-77.8837, -184.212, 0, 1) // distance from (0,0,0) = 200
	pt3dadd(-97.3546, -230.265, 0, 1) // distance from (0,0,0) = 250
	pt3dadd(-116.826, -276.318, 0, 1) // distance from (0,0,0) = 300
    }
    dend[13] {pt3dclear()
	pt3dadd(0, 0, 0, 2) // distance from (0,0,0) = 0
	pt3dadd(19.4709, -46.053, 0, 1.5) // distance from (0,0,0) = 50
	pt3dadd(38.9419, -92.1061, 0, 1.5) // distance from (0,0,0) = 100
    }
    dend[14] {pt3dclear()
	pt3dadd(38.9419, -92.1061, 0, 1.2) // distance from (0,0,0) = 100
	pt3dadd(58.4128, -138.159, 0, 1.2) // distance from (0,0,0) = 150
	pt3dadd(77.8837, -184.212, 0, 1.2) // distance from (0,0,0) = 200
    }
    dend[15] {pt3dclear()
	pt3dadd(77.8837, -184.212, 0, 1) // distance from (0,0,0) = 200
	pt3dadd(97.3546, -230.265, 0, 1) // distance from (0,0,0) = 250
	pt3dadd(116.826, -276.318, 0, 1) // distance from (0,0,0) = 300
    }
}


proc subsets() { local i
    
    all = new SectionList()
    basal_list = new SectionList()
    apical_list = new SectionList()
    soma_list = new SectionList()
    axon_list = new SectionList()
    dendrite_list = new SectionList()
    
    soma all.append()
    soma soma_list.append()
    for i=0,15 {
	dend[i] all.append()
	dend[i] dendrite_list.append()
    }
    
    for i=0,9 {
	dend[i] apical_list.append()
    }
    
    for i=10,15 {
	dend[i] basal_list.append()
    }
}


proc biophys() {
    
    // resting membrane potential. Must lie between Na+ and K+ reversal potentials
    Vrest=-55
    
    // Temperature of simulation
    celsius = 34.0  
    
    // Membrane resistance in ohm*cm2
    RmDend = 27000 // 60000
    RmSoma = 27000 // 60000 
    
    // Membrane capacitance in uF/cm2
    CmSoma= 1.4 // 1.8
    CmDend = 1.4 // 1.8
    
    // Axial resistance in ohm*cm
    RaDend= 150 //75*3
    RaSoma= 150 //75*3	
    
    // Calcium concentrations in mM
    ca_outside = 2
    ca_inside = 5.e-6 // 50.e-6
    catau = 10
    
    // reversal potentials in mV
    ekval = -90	
    enaval = 55
    eHCNval = -40
    ecaval = 8.314*(273.15+celsius)/(2*9.649e4)*log(ca_outside/ca_inside)*1000 // about 170, otherwise set to 130
    
    if (Vrest<ekval) Vrest=ekval // Cell cannot rest lower than K+ reversal potential
    if (Vrest>enaval) Vrest=enaval // Cell cannot rest higher than Na+ reversal potential
    eleakval = -72 //Vrest
    
    // max ion channel conductances in mho/cm2
    gNav     = 0.018 // soma: // 0.12 //original 0.030 to .055 ; lm: //0.5  	//original 0.015
    gKdr     = 0.000008    // Delayed rectifier potassium
    gKGroup  = 0.0013 //0.1465/1
    gKvA 	 = 0.00040 // Proximal A-type potassium
    gHCN     = 0.0001 // HCN (hyperpolarization-activated cyclic nucleotide-gated channel)
    gCavN    = 0.00002 //   T-type calcium
    gCavL    = 0.0027 //  L-type calcium
    gKvCaB	 = 0.00004 // Big potassium channel: voltage and calcium gated 
    gKCaS	 = 0.000004 //  Small potassium channel: calcium gated		
    
    
    forsec all {
        
	insert iconc_Ca
	
	
	insert ch_KvA
	gmax_ch_KvA = gKvA		// A-type K+ conductance
	
	insert ch_CavN  			// N-type Ca2+ conductance
	gmax_ch_CavN = gCavN
	
	insert ch_CavL
	gmax_ch_CavL = gCavL
	
	insert ch_KCaS
	gmax_ch_KCaS = gKCaS
	
	insert ch_KvCaB
	gmax_ch_KvCaB = gKvCaB
        
	insert ch_HCN
	gmax_ch_HCN=gHCN
	
	Ra = RaSoma
    } 
    
    soma {
	insert ch_Navcck	
	gmax_ch_Navcck = gNav
	ena = enaval
	insert ch_Kdrfast
	gmax_ch_Kdrfast = gKdr
	insert ch_KvGroup
	gmax_ch_KvGroup = gKGroup
	
	insert pas
	g_pas = 1/RmSoma
        
	cm=CmSoma
    } 
    
    access soma
    distance()
    forsec dendrite_list {
	insert pas
	g_pas = 1/RmDend
	cm=CmDend
	
	for (x,0) {
	    if (distance(x)<100) {
		insert ch_Navcck
		gmax_ch_Navcck=gNav*.5
		ena = enaval
		insert ch_Kdrfast
		gmax_ch_Kdrfast=gKdr*10
		insert ch_KvGroup
		gmax_ch_KvGroup = gKGroup*2
	    }
	}
    }	
    
    forsec all {
	ek = ekval
	eca = ecaval
	e_pas = eleakval
	cao_iconc_Ca = ca_outside
    }
}



func is_art()  { return 0 }

obfunc connect2target() { localobj nc // $o1 target point process, optional $o2 returned NetCon
  soma nc = new NetCon(&v(1), $o1)
  nc.threshold = 10
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}

proc position() { local i
    
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-xx+x3d(i), $2-yy+y3d(i), $3-zz+z3d(i), diam3d(i))
  }
  xx = $1  yy = $2  zz = $3
}

objref syn_
proc synapses() {
  /* E0 */   bcdend1 syn_ = new ExpSyn(0.8)  synlist.append(syn_)
    syn_.tau = 2
  /* I1 */   bcdend1 syn_ = new ExpSyn(0.1)  synlist.append(syn_)
    syn_.tau = 5
    syn_.e = -80
}

endtemplate HICAPCell

