
begintemplate AxoAxonicCell

ndend1=4
ndend2=4
ndend3=4
ndend4=4

public connect2target, subsets, is_art, is_connected
public soma, bcdend1, bcdend2, bcdend3, bcdend4
public all, adend, bdend, cdend, ddend
public xx, yy, zz, position

objref syn, pre_list, templist

create soma, bcdend1[ndend1], bcdend2[ndend2], bcdend3[ndend3], bcdend4[ndend4]


proc init() {
    subsets()
    geom()
    biophys()
    synapse()
}

objref all, adend, bdend, cdend, ddend

proc subsets() { local i
    
    objref all, adend, bdend, cdend, ddend
    all = new SectionList()
    soma all.append()
    for i=0, 3 bcdend1 [i] all.append()
    for i=0, 3 bcdend2 [i] all.append()
    for i=0, 3 bcdend3 [i] all.append()
    for i=0, 3 bcdend4 [i] all.append()
    
    adend  = new SectionList()
    bcdend1 [0] adend.append()
    bcdend2 [0] adend.append()
    bcdend3 [0] adend.append()
    bcdend4 [0] adend.append()
    
    bdend  = new SectionList()
    bcdend1 [1] bdend.append()
    bcdend2 [1] bdend.append()
    bcdend3 [1] bdend.append()
    bcdend4 [1] bdend.append()
    
    cdend  = new SectionList()
    bcdend1 [2] cdend.append()
    bcdend2 [2] cdend.append()
    bcdend3 [2] cdend.append()
    bcdend4 [2] cdend.append()
    
    ddend  = new SectionList()
    bcdend1 [3] ddend.append()
    bcdend2 [3] ddend.append()
    bcdend3 [3] ddend.append()
    bcdend4 [3] ddend.append()
}

proc geom() {
    
    soma {nseg=1 L=20 diam=15} // changed L & diam
    
    bcdend1 [0] {nseg=1 L=75 diam=4}	// bcdend 1 and 2 are apical
    bcdend1 [1] {nseg=1 L=75 diam=3}
    bcdend1 [2] {nseg=1 L=75 diam=2}
    bcdend1 [3] {nseg=1 L=75 diam=1}
    
    bcdend2 [0] {nseg=1 L=75 diam=4}
    bcdend2 [1] {nseg=1 L=75 diam=3}
    bcdend2 [2] {nseg=1 L=75 diam=2}
    bcdend2 [3] {nseg=1 L=75 diam=1}
    
    bcdend3 [0] {nseg=1 L=50 diam=4} 	// bcdend 3 and 4 are basal
    bcdend3 [1] {nseg=1 L=50 diam=3}
    bcdend3 [2] {nseg=1 L=50 diam=2}
    bcdend3 [3] {nseg=1 L=50 diam=1} 
    
    bcdend4 [0] {nseg=1 L=50 diam=4}
    bcdend4 [1] {nseg=1 L=50 diam=3}
    bcdend4 [2] {nseg=1 L=50 diam=2}
    bcdend4 [3] {nseg=1 L=50 diam=1} 	
    
}
    
proc biophys() {
    
    forsec all {
	insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 5.e-6
	insert borgka
	gkabar_borgka=0.00015
	insert nca  // HAV-N- Ca channel
	gncabar_nca=0.0008   
	insert lca 
	glcabar_lca=0.005
	insert gskch
	gskbar_gskch=0.000002
	insert cagk
	gkbar_cagk=0.0002
    }
    
    soma {
        insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  
	gkfbar_ichan2=0.013  
	gl_ichan2 = 0.00018
	cm=1.4
    } 
    
    forsec adend {
        insert ichan2
	gnatbar_ichan2=0.12  
	gkfbar_ichan2=0.013
	gl_ichan2 = 0.00018
	cm=1.4
    }		
    forsec bdend {
        insert ichan2
	gnatbar_ichan2=0.0
	gkfbar_ichan2=0.00
	gl_ichan2 = 0.00018
        cm=1.4
    }
    
    forsec cdend {
        insert ichan2
	gnatbar_ichan2=0.0
	gkfbar_ichan2=0.00
	gl_ichan2 = 0.00018
        cm=1.4
    }
    
    forsec ddend {
        insert ichan2
	gnatbar_ichan2=0.0
	gkfbar_ichan2=0.00
	gl_ichan2 = 0.00018
	cm=1.4
    }
    
    
    connect bcdend1[0](0), soma(1)
    connect bcdend2[0](0), soma(1)
    connect bcdend3[0](0), soma(0)
    connect bcdend4[0](0), soma(0)
    for i=1,3 {
	connect bcdend1[i](0), bcdend1[i-1](1)
    }
    for i=1,3 {
	connect bcdend2[i](0), bcdend2[i-1](1)
    }
    for i=1,3 {
	connect bcdend3[i](0), bcdend3[i-1](1)
    }
    for i=1,3 {
	connect bcdend4[i](0), bcdend4[i-1](1)
    }
    
    forsec all {Ra=100}
    forsec all {
        enat = 55 
        ekf = -90  
        ek=-90  
        elca=130
        esk=-90
	el_ichan2 =-60.06
        
        cao_ccanl=2
    }  // make catau slower70e-3 	cao=2 cai=50.e-6 
}

func is_art()  { return 0 }

obfunc connect2target() { localobj nc // $o1 target point process, optional $o2 returned NetCon
  soma nc = new NetCon(&v(1), $o1)
  nc.threshold = 10
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}

proc position() { local i
    
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-xx+x3d(i), $2-yy+y3d(i), $3-zz+z3d(i), diam3d(i))
  }
  xx = $1  yy = $2  zz = $3
}

objref syn_
proc synapses() {
  /* E0 */   dend syn_ = new ExpSyn(0.8)  synlist.append(syn_)
    syn_.tau = 2
  /* I1 */   dend syn_ = new ExpSyn(0.1)  synlist.append(syn_)
    syn_.tau = 5
    syn_.e = -80
}



endtemplate AxoAxonicCell
