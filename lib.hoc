
proc graphout() { local i,j,node localobj f, v, conlist
    f = new File($s1)
    conlist = $o2
    f.wopen()
    for i=0, conlist.count()-1 {
        v = conlist.object(i)
        node = v.x[0]
        for j=1, v.size()-1 {
            f.printf("%d %d\n", node, v.x[j])
        }
    }
    f.close()
}


proc spikeout() { local i localobj f, spikevec, idvec
    
    f = new File($s1)
    spikevec = $o2
    idvec = $o3
    
    f.wopen()
    for i=0, spikevec.size-1 {
	f.printf("%g %d\n", spikevec.x[i], idvec.x[i])
    }
    f.close()
}

// CellCategoryInfo template
{xopen("./templates/CellCategoryInfo.hoc")}

// Load celltype info into a CellCategoryInfo template
proc loadCellCategoryInfo() { local i, cellNumber localobj f, cellTypes, cellType
    
    strdef cellTypeName, cellTypeTemplateName
    
    // The first argument must be a list
    cellTypes = $o1
    
    // The second argument must be the path to the cell types file 
    f = new File()
    f.ropen($s2)
    
    // Scan the first line, which contains the number of cell types
    numCellTypes = f.scanvar()
    
    for i=0, numCellTypes-1 {
        
        // Scan in the cell name, template name, number of cells
	f.scanstr(cellTypeName)
	f.scanstr(cellTypeTemplateName)
	cellNumber = f.scanvar()
        cellType = new CellCategoryInfo(cellTypeName,cellTypeTemplateName,cellNumber)
        cellTypes.append(cellType)
    }
    f.close()
    
}


// ConnectionInfo template
{xopen("./templates/ConnectivityInfo.hoc")}

proc loadConnectivityInfo() { local i, synIndex, wdType, standardWeight, standardVelocity, numConnectivityTypes localobj f, connectivityTypes, connectivityType
    
    strdef connectivityName
    
    // The first argument must be a list
    connectivityTypes = $o1
    
    // The second argument must be the path to the main connection file 
    f = new File()
    f.ropen($s2)
    
    // Scan the first line, which contains the number of connectivity matrices
    numConnectivityTypes = f.scanvar()
    
    print "numConnectivityTypes = ", numConnectivityTypes
    
    for i=0, numConnectivityTypes-1 {
        
        // Scan in the connectivity name and synapse index
	f.scanstr(connectivityName)
	synIndex = f.scanvar()
	wdType = f.scanvar()
        if (wdType == 1) {
            connectivityType = new ConnectivityInfo(connectivityName,synIndex,wdType)
            connectivityTypes.append(connectivityType)
        } else if (wdType == 2) {
            standardWeight = f.scanvar()
            standardVelocity = f.scanvar()
            connectivityType = new ConnectivityInfo(connectivityName,synIndex,wdType,standardWeight,standardVelocity)
            connectivityTypes.append(connectivityType)
        }
    }
    f.close()
    
}
